name: Java CI with Gradle

on:
  push:
    branches: [ "main" , "feat/cicd-17"]
  pull_request:
    branches: [ "main" , "feat/cicd-17"]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_REDIRECT_URL: ${{ secrets.KAKAO_REDIRECT_URL }}

    steps:
      # 1️⃣ 코드 체크아웃
      - uses: actions/checkout@v4

      # 2️⃣ JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Gradle 설정 및 캐싱
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # 4️⃣ gradlew 실행 권한 부여
      - name: Set executable permission for Gradlew
        run: chmod +x ./gradlew

      # 5️⃣ Spring Boot 빌드 (테스트 제외)
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      # 6️⃣ DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 7️⃣ Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test .

      # 8️⃣ DockerHub로 푸시
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test